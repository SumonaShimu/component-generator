{
  "language": "ReactJS",
  "topic": "articleWriter",
  "command": "make a complete react component {topic}.jsx",
  "note": "i want final result in div tag with className \"form-responseBox-common-styles\". use tailwind css for styles . i don't need any supporting text. add the top most div element will be starting with  | and end with |\n    here is an example:  \n   |<div> \n   <h1> New summer friendly clothes for you</h1>\n    <div> <h3>25% discount <h3>\n    <p> top notch meterials </p>\n    </div>\n   </div>|",
  "rowCount": 1,
  "tableData": [
    {
      "fieldCaption": "topicName",
      "fieldType": "ext",
      "min": 10,
      "max": 100,
      "isMandatory": true
    }
  ],
  "description": "keep the styles and functions same as it is in the example.",
  "example": "import React, { useContext, useState } from \"react\";\nimport { gptApiCall } from \"../../services/gpt-services\";\nimport { toast } from \"react-toastify\";\nimport StyleNewBtn from \"../Shared/StyleNewBtn\";\nimport LabelTooltip from \"../Shared/LabelTooltip\";\nimport { CircularProgress } from \"@mui/material\";\nimport { AuthContext } from \"../../providers/AuthProvider\";\nimport { useNavigate } from \"react-router-dom\";\nimport { extractTextBetweenPipes } from \"../../services/utils/extractTextBetweenPipes\";\nimport QuillTextEditor from \"../../reactQuillEditor/QuillTextEditor\";\n\nconst ActivePassiveVoice = () => {\n  const { user, setQuillText } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [conversionResult, setConversionResult] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const apiResponseElement = document.getElementById(\"api-response\");\n  console.log(apiResponseElement);\n  const [formData, setFormData] = useState({\n    Command: `Change the given sentence (active voice to passive voice or vise versa).\n    note : i want final result in div tag with className \"form-responseBox-common-styles\". use tailwind css for styles . i don't need any supporting text. add the top most div element will be starting with  | and end with |\n    here is an example:  \n   |<div> \n   <h1> New summer friendly clothes for you</h1>\n    <div> <h3>25% discount <h3>\n    <p> top notch meterials </p>\n    </div>\n   </div>|`,\n    Sentence: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    if (!user) {\n      toast.warning(\"Please login!\");\n      navigate(\"/login\");\n      return;\n    }\n    setLoading(true);\n    setConversionResult(null);\n    e.preventDefault();\n\n    const url = \"method/whatagptapi.whatagpt.get\";\n    const temp = {\n      user_content: formData,\n      client_id: user?.uid,\n      version: \"2.0\",\n      chat_topic: \"0\",\n    };\n\n    gptApiCall(url, temp)\n      .then((response) => {\n        const res = response.data.message;\n        if (res?.error_code === 1001 || res?.error_code === 1006) {\n          toast.error(res.error_message);\n          navigate(\"/pricing\");\n          return;\n        }\n\n        const data = response.data.message.message;\n        setConversionResult(data);\n        const extractText = extractTextBetweenPipes(data);\n        setQuillText(extractText);\n        console.log(extractText);\n        setLoading(false);\n      })\n      .catch((error) => {\n        toast.error(error.message);\n      });\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"w-full h-full\">\n        <h6 className=\"template-section-title\">\n          Active to Passive Voice Converter\n        </h6>\n        <div className=\"form-container\">\n          <form\n            onSubmit={handleSubmit}\n            className=\"form-responseBox-common-styles\"\n          >\n            <div className=\"input-label-box-container\">\n              <label htmlFor=\"Sentence\" className=\"input-label\">\n                Sentence\n                <LabelTooltip info=\"Enter a sentence (max 500 words) for voice conversion\" />\n              </label>\n              <span className=\"input-word-count\">\n                {formData.Sentence.length}/500\n              </span>\n              <textarea\n                name=\"Sentence\"\n                value={formData.Sentence}\n                onChange={handleChange}\n                maxLength={500}\n                className=\"input-box\"\n                placeholder=\"Enter the sentence for conversion\"\n              />\n            </div>\n            <button type=\"submit\">\n              <StyleNewBtn text={\"Submit\"} />\n            </button>\n          </form>\n        </div>\n      </div>\n      <div className=\"w-full h-full\">\n        <h6 className=\"template-section-title\">Conversion Result</h6>\n        <div className=\"form-container\">\n          {isLoading && (\n            <div className=\"load-container\">\n              {\" \"}\n              <CircularProgress />\n            </div>\n          )}\n          {conversionResult && (\n            <div className=\"form-responseBox-common-styles\">\n              <QuillTextEditor />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActivePassiveVoice;",
  "systemContent": "you are a good React developer"
}
